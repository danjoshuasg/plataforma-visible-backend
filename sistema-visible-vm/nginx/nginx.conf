events {
    worker_connections 1024;
}

http {
    upstream postgrest_backend {
        server postgrest:3000 fail_timeout=30s max_fails=3;
    }
    
    upstream golang_backend {
        server golang-api:8090 fail_timeout=30s max_fails=3;
    }
    
    server {
        listen 80;
        server_name localhost;
        
        # Servir documentación estática
        location /docs/ {
            root /usr/share/nginx/html;
            index api-docs.html;
        }
        
        # Proxy a PostgREST
        location /api/db/ {
            rewrite ^/api/db/(.*) /$1 break;
            proxy_pass http://postgrest_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Proxy a Golang API
        location /api/ {
            proxy_pass http://golang_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Default redirect
        location = / {
            return 301 /docs/api-docs.html;
        }
    }
}